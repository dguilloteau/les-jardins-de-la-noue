# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MARIADB_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  MARIADB_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  MARIADB_USER: ${{ secrets.MYSQL_USER }}
  MARIADB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: mariadb:11.4
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 5432:3306

    steps:
    - uses: actions/checkout@v4
    - name: test
      run: echo $MARIADB_ROOT_PASSWORD
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Init database
      run: sudo sh scripts/mariadb-install-db.sh
    - name: Build with Maven
      run: mvn clean package -B -U

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
